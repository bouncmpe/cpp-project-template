Checks: >-
  bugprone-*,
  cppcoreguidelines-slicing,
  cppcoreguidelines-special-member-functions,
  google-build-explicit-make-pair,
  google-build-namespaces,
  google-default-arguments,
  google-global-names-in-headers,
  google-readability-casting,
  llvm-*,
  misc-*,
  -misc-no-recursion,
  -misc-non-private-member-variables-in-classes,
  -misc-unused-alias-decls,
  modernize-*,
  -modernize-concat-nested-namespaces,
  -modernize-use-trailing-return-type,
  performance-*,
  readability-*,
  -readability-avoid-const-params-in-decls,
  -readability-magic-numbers,
  -readability-static-accessed-through-instance,
  -readability-identifier-length,
  -readability-redundant-access-specifiers
CheckOptions:AbstractClassPrefix
  - { key: modernize-use-nodiscard.ReplacementString,   value: VEVALABS_NODISCARD }
  - { key: modernize-use-noexcept.ReplacementString,    value: VEVALABS_NOEXCEPT }
  - { key: readability-identifier-naming.ClassCase,     value: lower_case }
  - { key: readability-identifier-naming.MethodCase,    value: lower_case }
  - { key: readability-identifier-naming.FunctionCase,  value: lower_case }
  - { key: readability-identifier-naming.ParameterCase, value: lower_case }
  - { key: readability-identifier-naming.StructCase,    value: lower_case }
  - { key: readability-identifier-naming.VariableCase,  value: lower_case }
  - { key: readability-identifier-naming.AbstractClassPrefix, value: abstract }

WarningsAsErrors: '*'
HeaderFilterRegex: '*vevalabs/[^f].*'